"Day","Date (2025)","Conceptual Focus","Problem Type","Problem Title","Link","Status (Not Started, In Progress, Completed, Struggled)","Comments","D&A Task","D&A Concepts to Review","D&A Potential Questions"
1,"Tue, Sep 30","Foundations: Arrays & Hash Maps. Master Big O, basic array manipulation, and the power of hash maps for O(1) lookups.","Essential","Valid Anagram (Easy)","https://leetcode.com/problems/valid-anagram/","Not Started","","Select your project. Write a one-paragraph summary about the problem it solves.","Client-Server Architecture, API Fundamentals",""
1,"Tue, Sep 30","Foundations: Arrays & Hash Maps. Master Big O, basic array manipulation, and the power of hash maps for O(1) lookups.","Essential","Two Sum (Easy)","https://leetcode.com/problems/two-sum/","Not Started","","Select your project. Write a one-paragraph summary about the problem it solves.","Client-Server Architecture, API Fundamentals",""
1,"Tue, Sep 30","Foundations: Arrays & Hash Maps. Master Big O, basic array manipulation, and the power of hash maps for O(1) lookups.","Essential","Group Anagrams (Medium)","https://leetcode.com/problems/group-anagrams/","Not Started","","Select your project. Write a one-paragraph summary about the problem it solves.","Client-Server Architecture, API Fundamentals",""
1,"Tue, Sep 30","Foundations: Arrays & Hash Maps. Master Big O, basic array manipulation, and the power of hash maps for O(1) lookups.","Essential","Product of Array Except Self (Medium)","https://leetcode.com/problems/product-of-array-except-self/","Not Started","","Select your project. Write a one-paragraph summary about the problem it solves.","Client-Server Architecture, API Fundamentals",""
1,"Tue, Sep 30","Foundations: Arrays & Hash Maps. Master Big O, basic array manipulation, and the power of hash maps for O(1) lookups.","Extra","Top K Frequent Elements (Medium)","https://leetcode.com/problems/top-k-frequent-elements/","Not Started","","Select your project. Write a one-paragraph summary about the problem it solves.","Client-Server Architecture, API Fundamentals",""
1,"Tue, Sep 30","Foundations: Arrays & Hash Maps. Master Big O, basic array manipulation, and the power of hash maps for O(1) lookups.","Extra","Squares of a Sorted Array (Easy)","https://leetcode.com/problems/squares-of-a-sorted-array/","Not Started","","Select your project. Write a one-paragraph summary about the problem it solves.","Client-Server Architecture, API Fundamentals",""
2,"Wed, Oct 1","Core Array Algorithms. Focus on efficient patterns: Two Pointers, Sliding Window, and Binary Search.","Essential","Merge Sorted Array (Easy)","https://leetcode.com/problems/merge-sorted-array/","Not Started","","Draw a simple high-level architecture diagram. Use boxes and arrows for components like Client, API, and Database.","REST API (Endpoints, Methods, JSON), Stateless vs. Stateful Architecture","Is your architecture stateless? Why is that important for scaling?"
2,"Wed, Oct 1","Core Array Algorithms. Focus on efficient patterns: Two Pointers, Sliding Window, and Binary Search.","Essential","Find Minimum in Rotated Sorted Array (Medium)","https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/","Not Started","","Draw a simple high-level architecture diagram. Use boxes and arrows for components like Client, API, and Database.","REST API (Endpoints, Methods, JSON), Stateless vs. Stateful Architecture","Is your architecture stateless? Why is that important for scaling?"
2,"Wed, Oct 1","Core Array Algorithms. Focus on efficient patterns: Two Pointers, Sliding Window, and Binary Search.","Essential","Longest Substring Without Repeating Characters (Medium)","https://leetcode.com/problems/longest-substring-without-repeating-characters/","Not Started","","Draw a simple high-level architecture diagram. Use boxes and arrows for components like Client, API, and Database.","REST API (Endpoints, Methods, JSON), Stateless vs. Stateful Architecture","Is your architecture stateless? Why is that important for scaling?"
2,"Wed, Oct 1","Core Array Algorithms. Focus on efficient patterns: Two Pointers, Sliding Window, and Binary Search.","Essential","Maximum Points You Can Obtain from Cards (Medium)","https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards/","Not Started","","Draw a simple high-level architecture diagram. Use boxes and arrows for components like Client, API, and Database.","REST API (Endpoints, Methods, JSON), Stateless vs. Stateful Architecture","Is your architecture stateless? Why is that important for scaling?"
2,"Wed, Oct 1","Core Array Algorithms. Focus on efficient patterns: Two Pointers, Sliding Window, and Binary Search.","Extra","Container With Most Water (Medium)","https://leetcode.com/problems/container-with-most-water/","Not Started","","Draw a simple high-level architecture diagram. Use boxes and arrows for components like Client, API, and Database.","REST API (Endpoints, Methods, JSON), Stateless vs. Stateful Architecture","Is your architecture stateless? Why is that important for scaling?"
2,"Wed, Oct 1","Core Array Algorithms. Focus on efficient patterns: Two Pointers, Sliding Window, and Binary Search.","Extra","Search a 2D Matrix (Medium)","https://leetcode.com/problems/search-a-2d-matrix/","Not Started","","Draw a simple high-level architecture diagram. Use boxes and arrows for components like Client, API, and Database.","REST API (Endpoints, Methods, JSON), Stateless vs. Stateful Architecture","Is your architecture stateless? Why is that important for scaling?"
3,"Thu, Oct 2","Trees and Recursion. Master the fundamental DFS (in-order, pre-order, post-order) and BFS traversals.","Essential","Maximum Depth of Binary Tree (Easy)","https://leetcode.com/problems/maximum-depth-of-binary-tree/","Not Started","","List 2-3 key technical decisions made in your project.","Databases (SQL vs. NoSQL), Caching (e.g., Redis)","Why did you choose SQL over NoSQL?, How could a cache improve performance and where would you place it?"
3,"Thu, Oct 2","Trees and Recursion. Master the fundamental DFS (in-order, pre-order, post-order) and BFS traversals.","Essential","Validate Binary Search Tree (Medium)","https://leetcode.com/problems/validate-binary-search-tree/","Not Started","","List 2-3 key technical decisions made in your project.","Databases (SQL vs. NoSQL), Caching (e.g., Redis)","Why did you choose SQL over NoSQL?, How could a cache improve performance and where would you place it?"
3,"Thu, Oct 2","Trees and Recursion. Master the fundamental DFS (in-order, pre-order, post-order) and BFS traversals.","Essential","Kth Smallest Element in a BST (Medium)","https://leetcode.com/problems/kth-smallest-element-in-a-bst/","Not Started","","List 2-3 key technical decisions made in your project.","Databases (SQL vs. NoSQL), Caching (e.g., Redis)","Why did you choose SQL over NoSQL?, How could a cache improve performance and where would you place it?"
3,"Thu, Oct 2","Trees and Recursion. Master the fundamental DFS (in-order, pre-order, post-order) and BFS traversals.","Essential","Binary Tree Level Order Traversal (Medium)","https://leetcode.com/problems/binary-tree-level-order-traversal/","Not Started","","List 2-3 key technical decisions made in your project.","Databases (SQL vs. NoSQL), Caching (e.g., Redis)","Why did you choose SQL over NoSQL?, How could a cache improve performance and where would you place it?"
3,"Thu, Oct 2","Trees and Recursion. Master the fundamental DFS (in-order, pre-order, post-order) and BFS traversals.","Extra","Construct Quad Tree (Medium)","https://leetcode.com/problems/construct-quad-tree/","Not Started","","List 2-3 key technical decisions made in your project.","Databases (SQL vs. NoSQL), Caching (e.g., Redis)","Why did you choose SQL over NoSQL?, How could a cache improve performance and where would you place it?"
3,"Thu, Oct 2","Trees and Recursion. Master the fundamental DFS (in-order, pre-order, post-order) and BFS traversals.","Extra","Subtree of Another Tree (Easy)","https://leetcode.com/problems/subtree-of-another-tree/","Not Started","","List 2-3 key technical decisions made in your project.","Databases (SQL vs. NoSQL), Caching (e.g., Redis)","Why did you choose SQL over NoSQL?, How could a cache improve performance and where would you place it?"
4,"Fri, Oct 3","Graphs & Matrix Traversal. Priority #1. Focus on using BFS and DFS to explore graphs and 2D grids.","Essential","Number of Islands (Medium)","https://leetcode.com/problems/number-of-islands/","Not Started","","Explain the trade-offs for your key decisions. Why did you choose X over Y?","Monolith vs. Microservices, Load Balancer","Was your project a monolith? Why?, How would a load balancer help if traffic spiked?"
4,"Fri, Oct 3","Graphs & Matrix Traversal. Priority #1. Focus on using BFS and DFS to explore graphs and 2D grids.","Essential","Rotting Oranges (Medium)","https://leetcode.com/problems/rotting-oranges/","Not Started","","Explain the trade-offs for your key decisions. Why did you choose X over Y?","Monolith vs. Microservices, Load Balancer","Was your project a monolith? Why?, How would a load balancer help if traffic spiked?"
4,"Fri, Oct 3","Graphs & Matrix Traversal. Priority #1. Focus on using BFS and DFS to explore graphs and 2D grids.","Essential","Number of Provinces (Medium)","https://leetcode.com/problems/number-of-provinces/","Not Started","","Explain the trade-offs for your key decisions. Why did you choose X over Y?","Monolith vs. Microservices, Load Balancer","Was your project a monolith? Why?, How would a load balancer help if traffic spiked?"
4,"Fri, Oct 3","Graphs & Matrix Traversal. Priority #1. Focus on using BFS and DFS to explore graphs and 2D grids.","Essential","Bus Routes (Hard)","https://leetcode.com/problems/bus-routes/","Not Started","","Explain the trade-offs for your key decisions. Why did you choose X over Y?","Monolith vs. Microservices, Load Balancer","Was your project a monolith? Why?, How would a load balancer help if traffic spiked?"
4,"Fri, Oct 3","Graphs & Matrix Traversal. Priority #1. Focus on using BFS and DFS to explore graphs and 2D grids.","Extra","Walls and Gates (Medium)","https://leetcode.com/problems/walls-and-gates/","Not Started","","Explain the trade-offs for your key decisions. Why did you choose X over Y?","Monolith vs. Microservices, Load Balancer","Was your project a monolith? Why?, How would a load balancer help if traffic spiked?"
4,"Fri, Oct 3","Graphs & Matrix Traversal. Priority #1. Focus on using BFS and DFS to explore graphs and 2D grids.","Extra","The Maze (Medium)","https://leetcode.com/problems/the-maze/","Not Started","","Explain the trade-offs for your key decisions. Why did you choose X over Y?","Monolith vs. Microservices, Load Balancer","Was your project a monolith? Why?, How would a load balancer help if traffic spiked?"
5,"Sat, Oct 4","Advanced Patterns & Design. Cover Topological Sort, Union-Find, Heaps, and the ""Design"" question style.","Essential","Course Schedule (Medium)","https://leetcode.com/problems/course-schedule/","Not Started","","Practice your 10-minute verbal pitch about your project. Explain the architecture and decisions.","Authentication vs. Authorization, OAuth 2.0, Asynchronous Processing (Message Queues)","How did you handle user auth?, When would you use OAuth 2.0?, How would you handle a long-running task like sending an email?"
5,"Sat, Oct 4","Advanced Patterns & Design. Cover Topological Sort, Union-Find, Heaps, and the ""Design"" question style.","Essential","Course Schedule II (Medium)","https://leetcode.com/problems/course-schedule-ii/","Not Started","","Practice your 10-minute verbal pitch about your project. Explain the architecture and decisions.","Authentication vs. Authorization, OAuth 2.0, Asynchronous Processing (Message Queues)","How did you handle user auth?, When would you use OAuth 2.0?, How would you handle a long-running task like sending an email?"
5,"Sat, Oct 4","Advanced Patterns & Design. Cover Topological Sort, Union-Find, Heaps, and the ""Design"" question style.","Essential","LRU Cache (Medium)","https://leetcode.com/problems/lru-cache/","Not Started","","Practice your 10-minute verbal pitch about your project. Explain the architecture and decisions.","Authentication vs. Authorization, OAuth 2.0, Asynchronous Processing (Message Queues)","How did you handle user auth?, When would you use OAuth 2.0?, How would you handle a long-running task like sending an email?"
5,"Sat, Oct 4","Advanced Patterns & Design. Cover Topological Sort, Union-Find, Heaps, and the ""Design"" question style.","Essential","Merge Intervals (Medium)","https://leetcode.com/problems/merge-intervals/","Not Started","","Practice your 10-minute verbal pitch about your project. Explain the architecture and decisions.","Authentication vs. Authorization, OAuth 2.0, Asynchronous Processing (Message Queues)","How did you handle user auth?, When would you use OAuth 2.0?, How would you handle a long-running task like sending an email?"
5,"Sat, Oct 4","Advanced Patterns & Design. Cover Topological Sort, Union-Find, Heaps, and the ""Design"" question style.","Extra","Alien Dictionary (Hard)","https://leetcode.com/problems/alien-dictionary/","Not Started","","Practice your 10-minute verbal pitch about your project. Explain the architecture and decisions.","Authentication vs. Authorization, OAuth 2.0, Asynchronous Processing (Message Queues)","How did you handle user auth?, When would you use OAuth 2.0?, How would you handle a long-running task like sending an email?"
5,"Sat, Oct 4","Advanced Patterns & Design. Cover Topological Sort, Union-Find, Heaps, and the ""Design"" question style.","Extra","Reconstruct Itinerary (Hard)","https://leetcode.com/problems/reconstruct-itinerary/","Not Started","","Practice your 10-minute verbal pitch about your project. Explain the architecture and decisions.","Authentication vs. Authorization, OAuth 2.0, Asynchronous Processing (Message Queues)","How did you handle user auth?, When would you use OAuth 2.0?, How would you handle a long-running task like sending an email?"
6,"Sun, Oct 5","Final Review & Rest. Consolidate knowledge. Do NOT learn new things. Build confidence.","Essential","Redo a problem you struggled with.","","Not Started","","Read your D&A notes one last time. Check your tech setup (internet, microphone, etc.).","Quick review of all concepts.",""
6,"Sun, Oct 5","Final Review & Rest. Consolidate knowledge. Do NOT learn new things. Build confidence.","Essential","Redo another challenging problem.","","Not Started","","Read your D&A notes one last time. Check your tech setup (internet, microphone, etc.).","Quick review of all concepts.",""
